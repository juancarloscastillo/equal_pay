merit99 <- cl99 %>% select(V4:V8,V49:V55)
merit99$V4 <- car::recode(merit99$V4,"c(8,9)=NA",as.numeric = TRUE)
merit99$V5 <- car::recode(merit99$V5,"c(8,9)=NA",as.numeric = TRUE)
merit99$V6 <- car::recode(merit99$V6,"c(8,9)=NA",as.numeric = TRUE)
merit99$V7 <- car::recode(merit99$V7,"c(8,9)=NA",as.numeric = TRUE)
merit99$V8 <- car::recode(merit99$V8,"c(8,9)=NA",as.numeric = TRUE)
merit99$V4 <- sjmisc::rec(merit99$V4,rec="rev")
merit99$V5 <- sjmisc::rec(merit99$V5,rec="rev")
merit99$V6 <- sjmisc::rec(merit99$V6,rec="rev")
merit99$V7 <- sjmisc::rec(merit99$V7,rec="rev")
merit99$V8 <- sjmisc::rec(merit99$V8,rec="rev")
merit99 <- rename(merit99,
wfami = V4,
knope = V5,
refor = V6,
rinte = V7,
corru = V8)
poly99a <- psych::polychoric(select(merit99,c(wfami,knope,refor,rinte,corru)),na.rm = TRUE)
# Chunk 19
corrplot::corrplot.mixed(poly99a$rho,order = "AOE")
# Chunk 20: analisis factorial 1999 percepcion
library(GPArotation)
sjPlot::sjt.fa(select(merit99,c(wfami,knope,refor,rinte)),
method = "wls",
nmbr.fctr = 2,
title="Analisis Factorial 1999 Percepcion")
m1per99 <- '
gah_nmerit=~wfami+knope+corru
recom=~refor+rinte
'
fit1 <- cfa(model = m1per99,data = merit99)
summary(fit1, fit.measures=TRUE, standardized=TRUE)
m1per99 <- '
gah_nmerit=~wfami+knope+corru
recom=~refor+rinte
'
merit99$V49 <- car::recode(merit99$V49,"c(8,9)=NA",as.numeric = TRUE)
merit99$V50 <- car::recode(merit99$V50,"c(8,9)=NA",as.numeric = TRUE)
merit99$V51 <- car::recode(merit99$V51,"c(8,9)=NA",as.numeric = TRUE)
merit99$V52 <- car::recode(merit99$V52,"c(8,9)=NA",as.numeric = TRUE)
merit99$V53 <- car::recode(merit99$V53,"c(8,9)=NA",as.numeric = TRUE)
merit99$V54 <- car::recode(merit99$V54,"c(8,9)=NA",as.numeric = TRUE)
merit99$V55 <- car::recode(merit99$V55,"c(8,9)=NA",as.numeric = TRUE)
merit99$V49 <-sjmisc::rec(merit99$V49,rec="rev")
merit99$V50 <-sjmisc::rec(merit99$V50,rec="rev")
merit99$V51 <-sjmisc::rec(merit99$V51,rec="rev")
merit99$V52 <-sjmisc::rec(merit99$V52,rec="rev")
merit99$V53 <-sjmisc::rec(merit99$V53,rec="rev")
merit99$V54 <-sjmisc::rec(merit99$V54,rec="rev")
merit99$V55 <-sjmisc::rec(merit99$V55,rec="rev")
merit99 <- rename(merit99,
respo=V49,
neduc=V50,
suprv=V51,
mafam=V52,
hchil=V53,
gdwrk=V54,
effor=V55)
poly99b<- psych::polychoric(select(merit99,c(respo,neduc,suprv,mafam,hchil,gdwrk,effor)),na.rm = TRUE)
corrplot::corrplot.mixed(poly99b$rho,order = "AOE")
m1pref99 <- '
resp=~respo+neduc+suprv
fami=~mafam+hchil
merit=~gdwrk+effor
'
fit2 <- cfa(model = m1pref99,data = merit99)
summary(fit2, fit.measures=TRUE, standardized=TRUE)
fit2 <- cfa(model = m1pref99+data = merit99+ ordered = c("respo"+"neduc"+"suprv"+"mafam"+"hchil"+"gdwrk"+"effor"))
fit2 <- cfa(model = m1pref99,data = merit99, ordered = c("respo"+"neduc"+"suprv"+"mafam"+"hchil"+"gdwrk"+"effor"))
m1pref99 <- '
resp=~respo+neduc+suprv
fami=~mafam+hchil
merit=~gdwrk+effor
'
m1pref99 <- '
resp=~respo+neduc+suprv
fami=~mafam+hchil
merit=~gdwrk+effor
'
fit2 <- cfa(model = m1pref99,data = merit99, ordered = c("respo","neduc","suprv","mafam","hchil","gdwrk","effor"))
summary(fit2, fit.measures=TRUE, standardized=TRUE)
summary(fit2, fit.measures=TRUE, standardized=TRUE)
# Codigo carreras -  jciturra@uc.cl
library(dplyr)
library(data.table)
library(here)
rm(list=ls())
#******************************************************************************************
# - Año 2016 es el más relevante
#******************************************************************************************
# Oferta Académica 2010 - 2019
# - Arancel
# - Costo de Titulación
# - Puntaje Corte
# - % PSU por cada carrera
# - Matricula Anual
# - Vacante Semestre 01 y 02
oferta1 <- fread(here("data","OfertaAcademica","OFICIAL_OA_2010_AL_2019_21_01_2019_V1.csv"))
# Matricula  - info Carreras 2007 - 2018
# - % por género
# - Seleccionar agno **2015**
matr1 <- fread(here("data","Matricula","MATRICULA_2007_AL_2018_SIES_28062018.csv"))
# Mi futuro - Mercado laboral -  Estadísticas por carrera
# - Tramos de Ingreso año 1 a 5
# - Los ingresos al 1er año después de su titulación corresponden al promedio de ingresos percibidos por las cohortes de titulados 2014, 2015 y ***2016***
# - Empleabilidad año **1** y 2
estcarreras18 <- readxl::read_excel(here("data","MiFuturo","estadisticas_por_carrera_2018b.xlsx"))
# Mi futuro - info carreras  2018
# - % PSU
# - N matricula por género
# - Arancel Anual
# - Costo de Titulación
# - Titulación por género
# - Rango de ingresos al Primero año de titulación
mifut18 <- readxl::read_excel(here("data","MiFuturo","buscador_de_carreras_2018.xlsx"))
mifut19 <- readxl::read_excel(here("data","MiFuturo","buscador_de_carreras_2019.xlsx"))
# Mi futuro - Mercado laboral
# - Empleabilidad al primer año
# - Ingreso Promedio al 4to año de titulación
merlab18 <- readxl::read_excel(here("data","MiFuturo","buscador_empleabilidad_e_ingresos_2018.xlsx"))
# Postulaciones -  base PSU 2016
# - Código DEMRE
postu16 <- fread(here("data","psu","C_POSTULACIONES_SELECCION_PSU_2016_PRIV_MRUN.csv"))
postu16$CODIGO_CARRERA # CODIGO DEMRE, SON LO MISMO
postu16$CODIGO_CARRERA<- as.numeric(postu16$CODIGO_CARRERA)
# Postulaciones -  base matricula 2015
# - Código DEMRE
mat2015 <- fread(here("data","psu","D_MATRICULA_PSU_2015_PRIV_MRUN.csv"))
mat2015$CODIGO_CARRERA # CODIGO DEMRE, SON LO MISMO
mat2015$CODIGO_CARRERA<- as.numeric(mat2015$CODIGO_CARRERA)
# Base Con carrera homologada e información de carreras, mercado laboral.
carhomo <- readxl::read_excel(here("data","custom","base_carhomo.xlsx"))
carhomo <- rename(carhomo,DEMRE=CODIGO_CARRERA)
#********************************************************************************************************************************
# CODIGO ************************************************************************************************************************
#********************************************************************************************************************************
# - Identificador DEMRE
of1 <- oferta1 %>% filter(PONDERACION_LENGUAJE>0 & PONDERACION_MATEMATICAS>0 & AÑO==2016 & NIVEL_GLOBAL=="Pregrado"& TIPO_IES %in% c("A","B","C") & TIPO_CARRERA == "Plan Regular")
of1 <- of1 %>% filter(DEMRE %in% postu16$CODIGO_CARRERA)
instituciones <- of1 %>% group_by(CODIGO_IES,NOMBRE_IES) %>% summarise(n=n())
# - 43 instituciones Universitarias
codigos             <- of1 %>% select(starts_with(match = "COD"), JORNADA,VERSION,NOMBRE_IES, NOMBRE_CARRERA)
carreras            <- of1 %>% group_by(NOMBRE_CARRERA) %>% summarise(n=n()) %>% select(-n)
carreras            <- tibble::rowid_to_column(carreras, "ID_CARRERA")
carreras$ID_CARRERA <- stringr::str_pad(carreras$ID_CARRERA,width = 4, pad = "0")
# xlsx::write.xlsx(carreras,file = "cod_carrera.xlsx")
of1_a <- left_join(x = of1,y = carreras,"NOMBRE_CARRERA")
# - Ahora tenemos un ID_CARRERA independiente de la institución
# Remplazar tildes y caracteres español *********************************************************************************************
of1_a$AREA_CARRERA_GENERICAb <-toupper(of1_a$AREA_CARRERA_GENERICA)
of1_a$AREA_CARRERA_GENERICAb <- stringr::str_replace_all(string = of1_a$AREA_CARRERA_GENERICAb,pattern = "Á",replacement = "A")
of1_a$AREA_CARRERA_GENERICAb <- stringr::str_replace_all(string = of1_a$AREA_CARRERA_GENERICAb,pattern = "É",replacement = "E")
of1_a$AREA_CARRERA_GENERICAb <- stringr::str_replace_all(string = of1_a$AREA_CARRERA_GENERICAb,pattern = "Í",replacement = "I")
of1_a$AREA_CARRERA_GENERICAb <- stringr::str_replace_all(string = of1_a$AREA_CARRERA_GENERICAb,pattern = "Ó",replacement = "O")
of1_a$AREA_CARRERA_GENERICAb <- stringr::str_replace_all(string = of1_a$AREA_CARRERA_GENERICAb,pattern = "Ú",replacement = "U")
of1_a$AREA_CARRERA_GENERICAb <- stringr::str_replace_all(string = of1_a$AREA_CARRERA_GENERICAb,pattern = "Ñ",replacement = "N")
of1_a$AREA_CARRERA_GENERICAb <- stringr::str_replace_all(string = of1_a$AREA_CARRERA_GENERICAb,pattern = "/",replacement = "_")
names(of1_a)<- stringr::str_replace_all(string = names(of1_a),pattern = " ",replacement = "_")
names(of1_a)<- stringr::str_replace_all(string = names(of1_a),pattern = "Á",replacement = "A")
names(of1_a)<- stringr::str_replace_all(string = names(of1_a),pattern = "É",replacement = "E")
names(of1_a)<- stringr::str_replace_all(string = names(of1_a),pattern = "Í",replacement = "I")
names(of1_a)<- stringr::str_replace_all(string = names(of1_a),pattern = "Ó",replacement = "O")
names(of1_a)<- stringr::str_replace_all(string = names(of1_a),pattern = "Ú",replacement = "U")
names(of1_a)<- stringr::str_replace_all(string = names(of1_a),pattern = "Ñ",replacement = "N")
names(of1_a)<- stringr::str_replace_all(string = names(of1_a),pattern = "/",replacement = "_")
# Revisión Tabla agrupada de códigos de carrera ************************************************************************************
# areascon <- of1_a %>% group_by(NOMBRE_CARRERA,ID_CARRERA,OECD_SUBAREA,AREA_CARRERA_GENERICA,AREA_CARRERA_GENERICAb) %>%  summarise(n=n())
# Remplazar tildes y caracteres español *********************************************************************************************
# areascon$AREA_CARRERA_GENERICAb <- stringr::str_replace_all(string = areascon$AREA_CARRERA_GENERICAb,pattern = "Á",replacement = "A")
# areascon$AREA_CARRERA_GENERICAb <- stringr::str_replace_all(string = areascon$AREA_CARRERA_GENERICAb,pattern = "É",replacement = "E")
# areascon$AREA_CARRERA_GENERICAb <- stringr::str_replace_all(string = areascon$AREA_CARRERA_GENERICAb,pattern = "Í",replacement = "I")
# areascon$AREA_CARRERA_GENERICAb <- stringr::str_replace_all(string = areascon$AREA_CARRERA_GENERICAb,pattern = "Ó",replacement = "O")
# areascon$AREA_CARRERA_GENERICAb <- stringr::str_replace_all(string = areascon$AREA_CARRERA_GENERICAb,pattern = "Ú",replacement = "U")
# areascon$AREA_CARRERA_GENERICAb <- stringr::str_replace_all(string = areascon$AREA_CARRERA_GENERICAb,pattern = "Ñ",replacement = "N")
# areascon$AREA_CARRERA_GENERICAb <- stringr::str_replace_all(string = areascon$AREA_CARRERA_GENERICAb,pattern = "/",replacement = "_")
# areas1 <- areascon %>% group_by(AREA_CARRERA_GENERICA) %>% summarise(n=n())
# xlsx::write.xlsx(as.data.frame(areascon), file = "areas_carrera.xlsx")
# -  Con esta base se pueden ordenar las áreas que necesita Andrea
# Base de oferta 2016 es core ************** CODIGO_UNICO, DEMRE y AREA_CARRERA_GENERICA
# Base matricula 2015 ********************** CÓDIGO CARRERA
# Pegar of1_a hay que pegarsela matricula psu 2015 usando DEMRE *****  esto es una forma de tener DEMRE e ID_CARRERA juntos
# Luego ********************* cacular en base a ID_CARRERA %>% summarise(min() median() mean() sd() quantiles()) de PUNTAJE_PONDERADO
# - Percentil 10, 25, 50, 75, 90
# En carrerasISCED_desagregado está el código DEMRE para crear el área UNESCO de 14 categorías
names(matr1)<- stringr::str_replace_all(string = names(matr1),pattern = " ",replacement = "_")
names(matr1)<- stringr::str_replace_all(string = names(matr1),pattern = "Á",replacement = "A")
names(matr1)<- stringr::str_replace_all(string = names(matr1),pattern = "É",replacement = "E")
names(matr1)<- stringr::str_replace_all(string = names(matr1),pattern = "Í",replacement = "I")
names(matr1)<- stringr::str_replace_all(string = names(matr1),pattern = "Ó",replacement = "O")
names(matr1)<- stringr::str_replace_all(string = names(matr1),pattern = "Ú",replacement = "U")
names(matr1)<- stringr::str_replace_all(string = names(matr1),pattern = "Ñ",replacement = "N")
names(matr1)<- stringr::str_replace_all(string = names(matr1),pattern = "/",replacement = "_")
# subset de matrícula con las variables de carreras del año 2015
mat1 <- matr1 %>% filter(ANO==2015)
mat1 <- rename(mat1,CODIGO_UNICO=CODIGO_CARRERA, AREA_CARRERA_GENERICA_MATR=AREA_CARRERA_GENERICA)
mat1 <- mat1 %>% filter(CODIGO_UNICO %in% of1_a$CODIGO_UNICO) #Filtrar según código DEMRE presente en la base OfertaAcadémica
names(mat1)<- stringr::str_replace_all(string = names(mat1),pattern = " ",replacement = "_")
names(mat1)<- stringr::str_replace_all(string = names(mat1),pattern = "Á",replacement = "A")
names(mat1)<- stringr::str_replace_all(string = names(mat1),pattern = "É",replacement = "E")
names(mat1)<- stringr::str_replace_all(string = names(mat1),pattern = "Í",replacement = "I")
names(mat1)<- stringr::str_replace_all(string = names(mat1),pattern = "Ó",replacement = "O")
names(mat1)<- stringr::str_replace_all(string = names(mat1),pattern = "Ú",replacement = "U")
names(mat1)<- stringr::str_replace_all(string = names(mat1),pattern = "Ñ",replacement = "N")
names(mat1)<- stringr::str_replace_all(string = names(mat1),pattern = "/",replacement = "_")
mat1 <-  mat1 %>% select(CODIGO_UNICO,AREA_DEL_CONOCIMIENTO:AREA_CARRERA_GENERICA_MATR,TOTAL_MATRICULADOS:MATRICULADOS_HOMBRES_PRIMER_ANO)
# VERIFICAR VARIABLES EN:
# - of1_a
# - mat1
names(of1_a)
names(mat1)
names(carhomo)
install.packages("xlsx")
# Codigo carreras -  jciturra@uc.cl
library(dplyr)
library(data.table)
library(here)
rm(list=ls())
#******************************************************************************************
# - Año 2016 es el más relevante
#******************************************************************************************
# Oferta Académica 2010 - 2019
# - Arancel
# - Costo de Titulación
# - Puntaje Corte
# - % PSU por cada carrera
# - Matricula Anual
# - Vacante Semestre 01 y 02
oferta1 <- fread(here("data","OfertaAcademica","OFICIAL_OA_2010_AL_2019_21_01_2019_V1.csv"))
# Matricula  - info Carreras 2007 - 2018
# - % por género
# - Seleccionar agno **2015**
matr1 <- fread(here("data","Matricula","MATRICULA_2007_AL_2018_SIES_28062018.csv"))
# Mi futuro - Mercado laboral -  Estadísticas por carrera
# - Tramos de Ingreso año 1 a 5
# - Los ingresos al 1er año después de su titulación corresponden al promedio de ingresos percibidos por las cohortes de titulados 2014, 2015 y ***2016***
# - Empleabilidad año **1** y 2
estcarreras18 <- readxl::read_excel(here("data","MiFuturo","estadisticas_por_carrera_2018b.xlsx"))
# Mi futuro - info carreras  2018
# - % PSU
# - N matricula por género
# - Arancel Anual
# - Costo de Titulación
# - Titulación por género
# - Rango de ingresos al Primero año de titulación
mifut18 <- readxl::read_excel(here("data","MiFuturo","buscador_de_carreras_2018.xlsx"))
mifut19 <- readxl::read_excel(here("data","MiFuturo","buscador_de_carreras_2019.xlsx"))
# Mi futuro - Mercado laboral
# - Empleabilidad al primer año
# - Ingreso Promedio al 4to año de titulación
merlab18 <- readxl::read_excel(here("data","MiFuturo","buscador_empleabilidad_e_ingresos_2018.xlsx"))
# Postulaciones -  base PSU 2016
# - Código DEMRE
postu16 <- fread(here("data","psu","C_POSTULACIONES_SELECCION_PSU_2016_PRIV_MRUN.csv"))
postu16$CODIGO_CARRERA # CODIGO DEMRE, SON LO MISMO
postu16$CODIGO_CARRERA<- as.numeric(postu16$CODIGO_CARRERA)
# Postulaciones -  base matricula 2015
# - Código DEMRE
mat2015 <- fread(here("data","psu","D_MATRICULA_PSU_2015_PRIV_MRUN.csv"))
mat2015$CODIGO_CARRERA # CODIGO DEMRE, SON LO MISMO
mat2015$CODIGO_CARRERA<- as.numeric(mat2015$CODIGO_CARRERA)
# Base Con carrera homologada e información de carreras, mercado laboral.
carhomo <- readxl::read_excel(here("data","custom","base_carhomo.xlsx"))
carhomo <- rename(carhomo,DEMRE=CODIGO_CARRERA)
#********************************************************************************************************************************
# CODIGO ************************************************************************************************************************
#********************************************************************************************************************************
# - Identificador DEMRE
of1 <- oferta1 %>% filter(PONDERACION_LENGUAJE>0 & PONDERACION_MATEMATICAS>0 & AÑO==2016 & NIVEL_GLOBAL=="Pregrado"& TIPO_IES %in% c("A","B","C") & TIPO_CARRERA == "Plan Regular")
of1 <- of1 %>% filter(DEMRE %in% postu16$CODIGO_CARRERA)
instituciones <- of1 %>% group_by(CODIGO_IES,NOMBRE_IES) %>% summarise(n=n())
# - 43 instituciones Universitarias
codigos             <- of1 %>% select(starts_with(match = "COD"), JORNADA,VERSION,NOMBRE_IES, NOMBRE_CARRERA)
carreras            <- of1 %>% group_by(NOMBRE_CARRERA) %>% summarise(n=n()) %>% select(-n)
carreras            <- tibble::rowid_to_column(carreras, "ID_CARRERA")
carreras$ID_CARRERA <- stringr::str_pad(carreras$ID_CARRERA,width = 4, pad = "0")
# xlsx::write.xlsx(carreras,file = "cod_carrera.xlsx")
of1_a <- left_join(x = of1,y = carreras,"NOMBRE_CARRERA")
# - Ahora tenemos un ID_CARRERA independiente de la institución
# Remplazar tildes y caracteres español *********************************************************************************************
of1_a$AREA_CARRERA_GENERICAb <-toupper(of1_a$AREA_CARRERA_GENERICA)
of1_a$AREA_CARRERA_GENERICAb <- stringr::str_replace_all(string = of1_a$AREA_CARRERA_GENERICAb,pattern = "Á",replacement = "A")
of1_a$AREA_CARRERA_GENERICAb <- stringr::str_replace_all(string = of1_a$AREA_CARRERA_GENERICAb,pattern = "É",replacement = "E")
of1_a$AREA_CARRERA_GENERICAb <- stringr::str_replace_all(string = of1_a$AREA_CARRERA_GENERICAb,pattern = "Í",replacement = "I")
of1_a$AREA_CARRERA_GENERICAb <- stringr::str_replace_all(string = of1_a$AREA_CARRERA_GENERICAb,pattern = "Ó",replacement = "O")
of1_a$AREA_CARRERA_GENERICAb <- stringr::str_replace_all(string = of1_a$AREA_CARRERA_GENERICAb,pattern = "Ú",replacement = "U")
of1_a$AREA_CARRERA_GENERICAb <- stringr::str_replace_all(string = of1_a$AREA_CARRERA_GENERICAb,pattern = "Ñ",replacement = "N")
of1_a$AREA_CARRERA_GENERICAb <- stringr::str_replace_all(string = of1_a$AREA_CARRERA_GENERICAb,pattern = "/",replacement = "_")
names(of1_a)<- stringr::str_replace_all(string = names(of1_a),pattern = " ",replacement = "_")
names(of1_a)<- stringr::str_replace_all(string = names(of1_a),pattern = "Á",replacement = "A")
names(of1_a)<- stringr::str_replace_all(string = names(of1_a),pattern = "É",replacement = "E")
names(of1_a)<- stringr::str_replace_all(string = names(of1_a),pattern = "Í",replacement = "I")
names(of1_a)<- stringr::str_replace_all(string = names(of1_a),pattern = "Ó",replacement = "O")
names(of1_a)<- stringr::str_replace_all(string = names(of1_a),pattern = "Ú",replacement = "U")
names(of1_a)<- stringr::str_replace_all(string = names(of1_a),pattern = "Ñ",replacement = "N")
names(of1_a)<- stringr::str_replace_all(string = names(of1_a),pattern = "/",replacement = "_")
# Revisión Tabla agrupada de códigos de carrera ************************************************************************************
# areascon <- of1_a %>% group_by(NOMBRE_CARRERA,ID_CARRERA,OECD_SUBAREA,AREA_CARRERA_GENERICA,AREA_CARRERA_GENERICAb) %>%  summarise(n=n())
# Remplazar tildes y caracteres español *********************************************************************************************
# areascon$AREA_CARRERA_GENERICAb <- stringr::str_replace_all(string = areascon$AREA_CARRERA_GENERICAb,pattern = "Á",replacement = "A")
# areascon$AREA_CARRERA_GENERICAb <- stringr::str_replace_all(string = areascon$AREA_CARRERA_GENERICAb,pattern = "É",replacement = "E")
# areascon$AREA_CARRERA_GENERICAb <- stringr::str_replace_all(string = areascon$AREA_CARRERA_GENERICAb,pattern = "Í",replacement = "I")
# areascon$AREA_CARRERA_GENERICAb <- stringr::str_replace_all(string = areascon$AREA_CARRERA_GENERICAb,pattern = "Ó",replacement = "O")
# areascon$AREA_CARRERA_GENERICAb <- stringr::str_replace_all(string = areascon$AREA_CARRERA_GENERICAb,pattern = "Ú",replacement = "U")
# areascon$AREA_CARRERA_GENERICAb <- stringr::str_replace_all(string = areascon$AREA_CARRERA_GENERICAb,pattern = "Ñ",replacement = "N")
# areascon$AREA_CARRERA_GENERICAb <- stringr::str_replace_all(string = areascon$AREA_CARRERA_GENERICAb,pattern = "/",replacement = "_")
# areas1 <- areascon %>% group_by(AREA_CARRERA_GENERICA) %>% summarise(n=n())
# xlsx::write.xlsx(as.data.frame(areascon), file = "areas_carrera.xlsx")
# -  Con esta base se pueden ordenar las áreas que necesita Andrea
# Base de oferta 2016 es core ************** CODIGO_UNICO, DEMRE y AREA_CARRERA_GENERICA
# Base matricula 2015 ********************** CÓDIGO CARRERA
# Pegar of1_a hay que pegarsela matricula psu 2015 usando DEMRE *****  esto es una forma de tener DEMRE e ID_CARRERA juntos
# Luego ********************* cacular en base a ID_CARRERA %>% summarise(min() median() mean() sd() quantiles()) de PUNTAJE_PONDERADO
# - Percentil 10, 25, 50, 75, 90
# En carrerasISCED_desagregado está el código DEMRE para crear el área UNESCO de 14 categorías
names(matr1)<- stringr::str_replace_all(string = names(matr1),pattern = " ",replacement = "_")
names(matr1)<- stringr::str_replace_all(string = names(matr1),pattern = "Á",replacement = "A")
names(matr1)<- stringr::str_replace_all(string = names(matr1),pattern = "É",replacement = "E")
names(matr1)<- stringr::str_replace_all(string = names(matr1),pattern = "Í",replacement = "I")
names(matr1)<- stringr::str_replace_all(string = names(matr1),pattern = "Ó",replacement = "O")
names(matr1)<- stringr::str_replace_all(string = names(matr1),pattern = "Ú",replacement = "U")
names(matr1)<- stringr::str_replace_all(string = names(matr1),pattern = "Ñ",replacement = "N")
names(matr1)<- stringr::str_replace_all(string = names(matr1),pattern = "/",replacement = "_")
# subset de matrícula con las variables de carreras del año 2015
mat1 <- matr1 %>% filter(ANO==2015)
mat1 <- rename(mat1,CODIGO_UNICO=CODIGO_CARRERA, AREA_CARRERA_GENERICA_MATR=AREA_CARRERA_GENERICA)
mat1 <- mat1 %>% filter(CODIGO_UNICO %in% of1_a$CODIGO_UNICO) #Filtrar según código DEMRE presente en la base OfertaAcadémica
names(mat1)<- stringr::str_replace_all(string = names(mat1),pattern = " ",replacement = "_")
names(mat1)<- stringr::str_replace_all(string = names(mat1),pattern = "Á",replacement = "A")
names(mat1)<- stringr::str_replace_all(string = names(mat1),pattern = "É",replacement = "E")
names(mat1)<- stringr::str_replace_all(string = names(mat1),pattern = "Í",replacement = "I")
names(mat1)<- stringr::str_replace_all(string = names(mat1),pattern = "Ó",replacement = "O")
names(mat1)<- stringr::str_replace_all(string = names(mat1),pattern = "Ú",replacement = "U")
names(mat1)<- stringr::str_replace_all(string = names(mat1),pattern = "Ñ",replacement = "N")
names(mat1)<- stringr::str_replace_all(string = names(mat1),pattern = "/",replacement = "_")
mat1 <-  mat1 %>% select(CODIGO_UNICO,AREA_DEL_CONOCIMIENTO:AREA_CARRERA_GENERICA_MATR,TOTAL_MATRICULADOS:MATRICULADOS_HOMBRES_PRIMER_ANO)
# VERIFICAR VARIABLES EN:
# - of1_a
install.packages("stringr")
# Codigo carreras -  jciturra@uc.cl
library(dplyr)
library(data.table)
library(here)
rm(list=ls())
#******************************************************************************************
# - Año 2016 es el más relevante
#******************************************************************************************
# Oferta Académica 2010 - 2019
# - Arancel
# - Costo de Titulación
# - Puntaje Corte
# - % PSU por cada carrera
# - Matricula Anual
# - Vacante Semestre 01 y 02
oferta1 <- fread(here("data","OfertaAcademica","OFICIAL_OA_2010_AL_2019_21_01_2019_V1.csv"))
# Matricula  - info Carreras 2007 - 2018
# - % por género
# - Seleccionar agno **2015**
matr1 <- fread(here("data","Matricula","MATRICULA_2007_AL_2018_SIES_28062018.csv"))
# Mi futuro - Mercado laboral -  Estadísticas por carrera
# - Tramos de Ingreso año 1 a 5
# - Los ingresos al 1er año después de su titulación corresponden al promedio de ingresos percibidos por las cohortes de titulados 2014, 2015 y ***2016***
# - Empleabilidad año **1** y 2
estcarreras18 <- readxl::read_excel(here("data","MiFuturo","estadisticas_por_carrera_2018b.xlsx"))
# Mi futuro - info carreras  2018
# - % PSU
# - N matricula por género
# - Arancel Anual
# - Costo de Titulación
# - Titulación por género
# - Rango de ingresos al Primero año de titulación
mifut18 <- readxl::read_excel(here("data","MiFuturo","buscador_de_carreras_2018.xlsx"))
mifut19 <- readxl::read_excel(here("data","MiFuturo","buscador_de_carreras_2019.xlsx"))
# Mi futuro - Mercado laboral
# - Empleabilidad al primer año
# - Ingreso Promedio al 4to año de titulación
merlab18 <- readxl::read_excel(here("data","MiFuturo","buscador_empleabilidad_e_ingresos_2018.xlsx"))
# Postulaciones -  base PSU 2016
# - Código DEMRE
postu16 <- fread(here("data","psu","C_POSTULACIONES_SELECCION_PSU_2016_PRIV_MRUN.csv"))
postu16$CODIGO_CARRERA # CODIGO DEMRE, SON LO MISMO
postu16$CODIGO_CARRERA<- as.numeric(postu16$CODIGO_CARRERA)
# Postulaciones -  base matricula 2015
# - Código DEMRE
mat2015 <- fread(here("data","psu","D_MATRICULA_PSU_2015_PRIV_MRUN.csv"))
mat2015$CODIGO_CARRERA # CODIGO DEMRE, SON LO MISMO
mat2015$CODIGO_CARRERA<- as.numeric(mat2015$CODIGO_CARRERA)
# Base Con carrera homologada e información de carreras, mercado laboral.
carhomo <- readxl::read_excel(here("data","custom","base_carhomo.xlsx"))
carhomo <- rename(carhomo,DEMRE=CODIGO_CARRERA)
#********************************************************************************************************************************
# CODIGO ************************************************************************************************************************
#********************************************************************************************************************************
# - Identificador DEMRE
of1 <- oferta1 %>% filter(PONDERACION_LENGUAJE>0 & PONDERACION_MATEMATICAS>0 & AÑO==2016 & NIVEL_GLOBAL=="Pregrado"& TIPO_IES %in% c("A","B","C") & TIPO_CARRERA == "Plan Regular")
of1 <- of1 %>% filter(DEMRE %in% postu16$CODIGO_CARRERA)
instituciones <- of1 %>% group_by(CODIGO_IES,NOMBRE_IES) %>% summarise(n=n())
# - 43 instituciones Universitarias
codigos             <- of1 %>% select(starts_with(match = "COD"), JORNADA,VERSION,NOMBRE_IES, NOMBRE_CARRERA)
carreras            <- of1 %>% group_by(NOMBRE_CARRERA) %>% summarise(n=n()) %>% select(-n)
carreras            <- tibble::rowid_to_column(carreras, "ID_CARRERA")
carreras$ID_CARRERA <- stringr::str_pad(carreras$ID_CARRERA,width = 4, pad = "0")
# xlsx::write.xlsx(carreras,file = "cod_carrera.xlsx")
of1_a <- left_join(x = of1,y = carreras,"NOMBRE_CARRERA")
# - Ahora tenemos un ID_CARRERA independiente de la institución
# Remplazar tildes y caracteres español *********************************************************************************************
of1_a$AREA_CARRERA_GENERICAb <-toupper(of1_a$AREA_CARRERA_GENERICA)
of1_a$AREA_CARRERA_GENERICAb <- stringr::str_replace_all(string = of1_a$AREA_CARRERA_GENERICAb,pattern = "Á",replacement = "A")
of1_a$AREA_CARRERA_GENERICAb <- stringr::str_replace_all(string = of1_a$AREA_CARRERA_GENERICAb,pattern = "É",replacement = "E")
of1_a$AREA_CARRERA_GENERICAb <- stringr::str_replace_all(string = of1_a$AREA_CARRERA_GENERICAb,pattern = "Í",replacement = "I")
of1_a$AREA_CARRERA_GENERICAb <- stringr::str_replace_all(string = of1_a$AREA_CARRERA_GENERICAb,pattern = "Ó",replacement = "O")
of1_a$AREA_CARRERA_GENERICAb <- stringr::str_replace_all(string = of1_a$AREA_CARRERA_GENERICAb,pattern = "Ú",replacement = "U")
of1_a$AREA_CARRERA_GENERICAb <- stringr::str_replace_all(string = of1_a$AREA_CARRERA_GENERICAb,pattern = "Ñ",replacement = "N")
of1_a$AREA_CARRERA_GENERICAb <- stringr::str_replace_all(string = of1_a$AREA_CARRERA_GENERICAb,pattern = "/",replacement = "_")
names(of1_a)<- stringr::str_replace_all(string = names(of1_a),pattern = " ",replacement = "_")
names(of1_a)<- stringr::str_replace_all(string = names(of1_a),pattern = "Á",replacement = "A")
names(of1_a)<- stringr::str_replace_all(string = names(of1_a),pattern = "É",replacement = "E")
names(of1_a)<- stringr::str_replace_all(string = names(of1_a),pattern = "Í",replacement = "I")
names(of1_a)<- stringr::str_replace_all(string = names(of1_a),pattern = "Ó",replacement = "O")
names(of1_a)<- stringr::str_replace_all(string = names(of1_a),pattern = "Ú",replacement = "U")
names(of1_a)<- stringr::str_replace_all(string = names(of1_a),pattern = "Ñ",replacement = "N")
names(of1_a)<- stringr::str_replace_all(string = names(of1_a),pattern = "/",replacement = "_")
# Revisión Tabla agrupada de códigos de carrera ************************************************************************************
# areascon <- of1_a %>% group_by(NOMBRE_CARRERA,ID_CARRERA,OECD_SUBAREA,AREA_CARRERA_GENERICA,AREA_CARRERA_GENERICAb) %>%  summarise(n=n())
# Remplazar tildes y caracteres español *********************************************************************************************
# areascon$AREA_CARRERA_GENERICAb <- stringr::str_replace_all(string = areascon$AREA_CARRERA_GENERICAb,pattern = "Á",replacement = "A")
# areascon$AREA_CARRERA_GENERICAb <- stringr::str_replace_all(string = areascon$AREA_CARRERA_GENERICAb,pattern = "É",replacement = "E")
# areascon$AREA_CARRERA_GENERICAb <- stringr::str_replace_all(string = areascon$AREA_CARRERA_GENERICAb,pattern = "Í",replacement = "I")
# areascon$AREA_CARRERA_GENERICAb <- stringr::str_replace_all(string = areascon$AREA_CARRERA_GENERICAb,pattern = "Ó",replacement = "O")
# areascon$AREA_CARRERA_GENERICAb <- stringr::str_replace_all(string = areascon$AREA_CARRERA_GENERICAb,pattern = "Ú",replacement = "U")
# areascon$AREA_CARRERA_GENERICAb <- stringr::str_replace_all(string = areascon$AREA_CARRERA_GENERICAb,pattern = "Ñ",replacement = "N")
# areascon$AREA_CARRERA_GENERICAb <- stringr::str_replace_all(string = areascon$AREA_CARRERA_GENERICAb,pattern = "/",replacement = "_")
# areas1 <- areascon %>% group_by(AREA_CARRERA_GENERICA) %>% summarise(n=n())
# xlsx::write.xlsx(as.data.frame(areascon), file = "areas_carrera.xlsx")
# -  Con esta base se pueden ordenar las áreas que necesita Andrea
# Base de oferta 2016 es core ************** CODIGO_UNICO, DEMRE y AREA_CARRERA_GENERICA
# Base matricula 2015 ********************** CÓDIGO CARRERA
# Pegar of1_a hay que pegarsela matricula psu 2015 usando DEMRE *****  esto es una forma de tener DEMRE e ID_CARRERA juntos
# Luego ********************* cacular en base a ID_CARRERA %>% summarise(min() median() mean() sd() quantiles()) de PUNTAJE_PONDERADO
# - Percentil 10, 25, 50, 75, 90
# En carrerasISCED_desagregado está el código DEMRE para crear el área UNESCO de 14 categorías
names(matr1)<- stringr::str_replace_all(string = names(matr1),pattern = " ",replacement = "_")
names(matr1)<- stringr::str_replace_all(string = names(matr1),pattern = "Á",replacement = "A")
names(matr1)<- stringr::str_replace_all(string = names(matr1),pattern = "É",replacement = "E")
names(matr1)<- stringr::str_replace_all(string = names(matr1),pattern = "Í",replacement = "I")
names(matr1)<- stringr::str_replace_all(string = names(matr1),pattern = "Ó",replacement = "O")
names(matr1)<- stringr::str_replace_all(string = names(matr1),pattern = "Ú",replacement = "U")
names(matr1)<- stringr::str_replace_all(string = names(matr1),pattern = "Ñ",replacement = "N")
names(matr1)<- stringr::str_replace_all(string = names(matr1),pattern = "/",replacement = "_")
# subset de matrícula con las variables de carreras del año 2015
mat1 <- matr1 %>% filter(ANO==2015)
mat1 <- rename(mat1,CODIGO_UNICO=CODIGO_CARRERA, AREA_CARRERA_GENERICA_MATR=AREA_CARRERA_GENERICA)
mat1 <- mat1 %>% filter(CODIGO_UNICO %in% of1_a$CODIGO_UNICO) #Filtrar según código DEMRE presente en la base OfertaAcadémica
names(mat1)<- stringr::str_replace_all(string = names(mat1),pattern = " ",replacement = "_")
names(mat1)<- stringr::str_replace_all(string = names(mat1),pattern = "Á",replacement = "A")
names(mat1)<- stringr::str_replace_all(string = names(mat1),pattern = "É",replacement = "E")
names(mat1)<- stringr::str_replace_all(string = names(mat1),pattern = "Í",replacement = "I")
names(mat1)<- stringr::str_replace_all(string = names(mat1),pattern = "Ó",replacement = "O")
names(mat1)<- stringr::str_replace_all(string = names(mat1),pattern = "Ú",replacement = "U")
names(mat1)<- stringr::str_replace_all(string = names(mat1),pattern = "Ñ",replacement = "N")
names(mat1)<- stringr::str_replace_all(string = names(mat1),pattern = "/",replacement = "_")
mat1 <-  mat1 %>% select(CODIGO_UNICO,AREA_DEL_CONOCIMIENTO:AREA_CARRERA_GENERICA_MATR,TOTAL_MATRICULADOS:MATRICULADOS_HOMBRES_PRIMER_ANO)
# VERIFICAR VARIABLES EN:
# - of1_a
# - mat1
names(of1_a)
names(mat1)
names(carhomo)
rm(list=ls())
oferta1 <- fread(here("data","OfertaAcademica","OFICIAL_OA_2010_AL_2019_21_01_2019_V1.csv"))
# Matricula  - info Carreras 2007 - 2018
# - % por género
# - Seleccionar agno **2015**
matr1 <- fread(here("data","Matricula","MATRICULA_2007_AL_2018_SIES_28062018.csv"))
# Mi futuro - Mercado laboral -  Estadísticas por carrera
# - Tramos de Ingreso año 1 a 5
# - Los ingresos al 1er año después de su titulación corresponden al promedio de ingresos percibidos por las cohortes de titulados 2014, 2015 y ***2016***
# - Empleabilidad año **1** y 2
estcarreras18 <- readxl::read_excel(here("data","MiFuturo","estadisticas_por_carrera_2018b.xlsx"))
# Mi futuro - info carreras  2018
# - % PSU
# - N matricula por género
# - Arancel Anual
# - Costo de Titulación
# - Titulación por género
# - Rango de ingresos al Primero año de titulación
mifut18 <- readxl::read_excel(here("data","MiFuturo","buscador_de_carreras_2018.xlsx"))
mifut19 <- readxl::read_excel(here("data","MiFuturo","buscador_de_carreras_2019.xlsx"))
# Mi futuro - Mercado laboral
# - Empleabilidad al primer año
# - Ingreso Promedio al 4to año de titulación
merlab18 <- readxl::read_excel(here("data","MiFuturo","buscador_empleabilidad_e_ingresos_2018.xlsx"))
# Postulaciones -  base PSU 2016
# - Código DEMRE
postu16 <- fread(here("data","psu","C_POSTULACIONES_SELECCION_PSU_2016_PRIV_MRUN.csv"))
postu16$CODIGO_CARRERA # CODIGO DEMRE, SON LO MISMO
postu16$CODIGO_CARRERA<- as.numeric(postu16$CODIGO_CARRERA)
# Postulaciones -  base matricula 2015
# - Código DEMRE
mat2015 <- fread(here("data","psu","D_MATRICULA_PSU_2015_PRIV_MRUN.csv"))
mat2015$CODIGO_CARRERA # CODIGO DEMRE, SON LO MISMO
mat2015$CODIGO_CARRERA<- as.numeric(mat2015$CODIGO_CARRERA)
# Base Con carrera homologada e información de carreras, mercado laboral.
carhomo <- readxl::read_excel(here("data","custom","base_carhomo.xlsx"))
carhomo <- rename(carhomo,DEMRE=CODIGO_CARRERA)
# Oferta Académica 2010 - 2019
# - Arancel
# - Costo de Titulación
# - Puntaje Corte
# - % PSU por cada carrera
# - Matricula Anual
# - Vacante Semestre 01 y 02
oferta1 <- fread(here("data","OfertaAcademica","OFICIAL_OA_2010_AL_2019_21_01_2019_V1.csv"))
